// Generated by jbindgen. DO NOT EDIT.

#[allow(unused_imports)]
use jni::objects::{
    JClass, JFieldID, JMethodID, JObject, JStaticFieldID, JString, JThrowable, JValue,
};
#[allow(unused_imports)]
use jni::sys::*;
use jni::JNIEnv;

#[allow(non_snake_case)]
#[no_mangle]
fn Java_HelloWorld_hello<'a>(arg1: JNIEnv, arg2: JClass<'a>, arg3: JString<'a>) -> jstring {
    return crate::jniimpl::Java_HelloWorld_hello(arg1, arg2, arg3);
}

#[allow(non_snake_case)]
#[no_mangle]
fn Java_HelloWorld_helloByte<'a>(arg1: JNIEnv, arg2: JClass<'a>, arg3: jbyteArray) -> jbyteArray {
    return crate::jniimpl::Java_HelloWorld_helloByte(arg1, arg2, arg3);
}

#[allow(non_snake_case)]
#[no_mangle]
fn Java_HelloWorld_factAndCallMeBack<'a>(
    arg1: JNIEnv,
    arg2: JClass<'a>,
    arg3: jint,
    arg4: JObject<'a>,
) {
    return crate::jniimpl::Java_HelloWorld_factAndCallMeBack(arg1, arg2, arg3, arg4);
}

#[allow(non_snake_case)]
#[no_mangle]
fn Java_HelloWorld_counterNew<'a>(arg1: JNIEnv, arg2: JClass<'a>, arg3: JObject<'a>) -> jlong {
    return crate::jniimpl::Java_HelloWorld_counterNew(arg1, arg2, arg3);
}

#[allow(non_snake_case)]
#[no_mangle]
fn Java_HelloWorld_counterIncrement<'a>(arg1: JNIEnv, arg2: JClass<'a>, arg3: jlong) {
    return crate::jniimpl::Java_HelloWorld_counterIncrement(arg1, arg2, arg3);
}

#[allow(non_snake_case)]
#[no_mangle]
fn Java_HelloWorld_counterDestroy<'a>(arg1: JNIEnv, arg2: JClass<'a>, arg3: jlong) {
    return crate::jniimpl::Java_HelloWorld_counterDestroy(arg1, arg2, arg3);
}

#[allow(non_snake_case)]
#[no_mangle]
fn Java_HelloWorld_asyncComputation<'a>(arg1: JNIEnv, arg2: JClass<'a>, arg3: JObject<'a>) {
    return crate::jniimpl::Java_HelloWorld_asyncComputation(arg1, arg2, arg3);
}
